tags:
  - name: Auth
    description: Authentication & user operations

paths:
  /user:
    get:
      tags: [Auth]
      summary: Get all users
      description: Retrieves a list of all users (Admin & Staff only). Supports pagination and optional filtering by name or email.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number (starts at 1)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of users per page (max 100)
        - in: query
          name: filter
          schema:
            type: string
            enum: [name, email]
          description: Field to filter by (optional)
        - in: query
          name: value
          schema:
            type: string
          description: Search value for the filter (required if filter is provided, case-insensitive partial match)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
        '400':
          description: Bad request (invalid filter or missing value)
        '404':
          description: No users found
        '500':
          description: Internal server error
  /user/profile:
    get:
      tags: [Auth]
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserPublic'
        '401':
          description: Unauthorized
        '404':
          description: Not found
    put:
      tags: [Auth]
      summary: Update current user profile (self). Admins may include role_id & status.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserPublic'
        '400': { description: Bad request }
        '403': { description: Forbidden }
        '404': { description: Not found }          
  /user/{id}:
    delete:
      tags: [Auth]
      summary: Delete a user (self or admin)
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '204':
          description: Deleted
        '403':
          description: Forbidden
        '404':
          description: Not found
        '409':
          description: Conflict (related records)