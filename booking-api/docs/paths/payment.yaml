tags:
  - name: Payment
    description: Manage payments (admin only)

paths:
  /payment:
    post:
      tags: [Payment]
      summary: Create payment
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreateRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment:
                    $ref: '#/components/schemas/Payment'
        '400': { description: Validation error }
        '500': { description: Internal server error }
    get:
      tags: [Payment]
      summary: List payments
      description: Supports pagination and filtering.
      security: [{ bearerAuth: [] }]
      parameters:
        - in: query
          name: page
          schema: { type: integer, minimum: 1, default: 1 }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 200, default: 25 }
        - in: query
          name: booking_id
          schema: { type: integer }
        - in: query
          name: method
          schema:
            type: string
            enum: [credit_card, paypal, cash, bank_transfer]
        - in: query
          name: status
          schema:
            type: string
            enum: [pending, paid, failed, refunded]
        - in: query
          name: from
          schema: { type: string, format: date-time }
        - in: query
          name: to
          schema: { type: string, format: date-time }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentList'
        '400': { description: Validation error }
        '500': { description: Internal server error }

  /payment/stats/status:
    get:
      tags: [Payment]
      summary: Payment totals by status
      description: Returns counts and summed amounts grouped by status.
      security: [{ bearerAuth: [] }]
      parameters:
        - in: query
          name: from
          schema: { type: string, format: date-time }
        - in: query
          name: to
          schema: { type: string, format: date-time }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStats'
        '400': { description: Validation error }
        '500': { description: Internal server error }

  /payment/{id}:
    get:
      tags: [Payment]
      summary: Get payment by ID
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment:
                    $ref: '#/components/schemas/Payment'
        '400': { description: Validation error }
        '404': { description: Not found }
        '500': { description: Internal server error }
    put:
      tags: [Payment]
      summary: Update payment
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentUpdateRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment:
                    $ref: '#/components/schemas/Payment'
        '400': { description: Validation error }
        '404': { description: Not found }
        '500': { description: Internal server error }
    delete:
      tags: [Payment]
      summary: Delete payment
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '204': { description: Deleted }
        '400': { description: Validation error }
        '404': { description: Not found }
        '500': { description: Internal server error }